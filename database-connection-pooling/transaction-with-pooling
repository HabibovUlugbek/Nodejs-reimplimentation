const http = require('http');
const { Pool } = require('pg');

const pool = new Pool({
    user: 'postgres',
    host: 'localhost',
    database: 'postgres',
    password: 'postgres',
    port: 20000,
    max: 10,
    idleTimeoutMillis: 30000,
});

const server = http.createServer(async (req, res) => {
    if (req.method === 'GET' && req.url === '/students') {
        const client = await pool.connect();

        try {
            await client.query('BEGIN');

            const result = await client.query('SELECT * FROM students LIMIT 1000');
            const students = result.rows;

            await client.query('COMMIT');

            res.writeHead(200, { 'Content-Type': 'application/json' });
            res.end(JSON.stringify(students));
        } catch (err) {
            console.error('Transaction error:', err);

            try {
                await client.query('ROLLBACK');
            } catch (rollbackErr) {
                console.error('Rollback error:', rollbackErr);
            }

            res.writeHead(500, { 'Content-Type': 'application/json' });
            res.end(JSON.stringify({ error: 'Internal Server Error' }));
        } finally {
            client.release();
        }
    } else {
        res.writeHead(404, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({ error: 'Not Found' }));
    }
});

const PORT = 3000;
server.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
